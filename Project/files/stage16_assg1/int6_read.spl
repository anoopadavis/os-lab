[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 7;
alias userSP R0;
userSP = SP;
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13] = userSP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1;


alias physicalPageNum R5;
alias offset R6;
alias fileDescPhysicalAddr R7;
physicalPageNum = [PTBR + 2 * ((userSP - 4)/ 512)];
offset = (userSP - 4) % 512;
fileDescPhysicalAddr = (physicalPageNum * 512) + offset;
alias fileDescriptor R4;
fileDescriptor=[fileDescPhysicalAddr];


if (fileDescriptor != -1)
then
	 alias physicalAddrRetVal R8;
	 physicalAddrRetVal = ([PTBR + 2 * ((userSP - 1) / 512)] * 512) + ((userSP - 1) % 512);
	 [physicalAddrRetVal] = -1;
else
         alias word_addr R3;
         word_addr = [[PTBR + 2 * ((userSP - 3) / 512)] * 512 + ((userSP - 3) % 512)];
         multipush(R0,R4,R5,R6,R7,R8);
         R1 = TERMINAL_READ;
         R2 = [SYSTEM_STATUS_TABLE + 1];
         R3 = word_addr;
         call DEVICE_MANAGER;
         multipop(R0,R4,R5,R6,R7,R8);


         alias physicalAddrRetVal R8;
         alias userSP R0;
         physicalAddrRetVal = ([PTBR + 2 * (userSP - 1)/ 512] * 512) + ((userSP - 1) % 512);
         [physicalAddrRetVal] = 0;
endif;
SP = userSP;      
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
ireturn;   
